help.ubuntu.com/community/IptablesHowTo
www.frozentux.net/iptables-tutorial/iptables-tutorial.html
========================================
iptables [-t table] command [match] [target/jump]
sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
sudo iptables -I INPUT 1 -i lo -j ACCEPT
iptables-save > file
iptables-save > /etc/iptables.rules
iptables-persistent package

iptables -L -t nat
iptables -L -n -v 
========================================
Matches
-p, --protocol               #iptables -A INPUT -p tcp
-s, --src, --source          #iptables -A INPUT -s 192.168.1.1
-d, --dst, --destination     #iptables -A INPUT -d 192.168.1.1
-i, --in-interface           #iptables -A INPUT -i eth0
-o, --out-interface          #iptables -A FORWARD -o eth0
-----------TCP matches
--sport, --source-port       #iptables -A INPUT -p tcp --sport 22
--dport, --destination-port  #iptables -A INPUT -p tcp --dport 22
--tcp-flags                  #iptables -p tcp --tcp-flags SYN,FIN,ACK SYN
--tcp-option                 #iptables -p tcp --tcp-option 16
-----------UDP matches
--sport, --source-port       #iptables -A INPUT -p udp --sport 53
--dport, --destination-port  #iptables -A INPUT -p udp --dport 53
-----------ICMP matches##iptables -p icmp --help
--icmp-type                  #iptables -A INPUT -p icmp --icmp-type 8
-----------Comment match
--comment                    #iptables -A INPUT <todo> --comment "A comment" ##
-----------Conntrack match
--ctstate                    #iptables -A INPUT -p tcp -m conntrack --ctstate RELATED
-----------

-----------
========================================
iptables -P INPUT DROP       #-P, --policy
-------------

-------------
*nat
-A POSTROUTING -o eth0 -j SNAT --to-source 1.1.1.1
========================================
dpkg -L ufw                      #files installed by a package
sudo ufw enable                  #To turn UFW on with the default set of rules
sudo ufw disable                 #To disable ufw use
sudo ufw disable && sudo ufw enable
sudo ufw status verbose          #To check the status of UFW
sudo ufw show raw                #

/etc/ufw                         #rules files, end with .rules
/lib/ufw/user.rules              #old?
/etc/ufw/user.rules
locate user.rules

sudo ufw allow <port>/<optional: protocol>
sudo ufw allow 53/tcp

sudo ufw deny <port>/<optional: protocol>

sudo ufw delete deny 80/tcp
ufw deny out from any to 8.8.8.8
ufw delete deny out from any to 8.8.8.8

sudo ufw allow <service name>    #less /etc/services
sudo ufw allow from 203.0.113.101
sudo ufw deny <service name>
sudo ufw deny from 203.0.113.100
sudo ufw delete allow from 203.0.113.101

sudo ufw status numbered
sudo ufw delete 1

sudo ufw logging on
sudo ufw logging off

sudo ufw allow from <ip address>
sudo ufw allow from 192.168.1.0/24

sudo ufw --dry-run allow http        #output the resulting rules, but not apply them

sudo ufw app list
---
docs.ansible.com/ansible/latest/collections/community/general/ufw_module.html
ufw
requirements  - ufw package
ansible-galaxy collection list
ansible-galaxy collection install community.general
To use it in a playbook, specify: community.general.ufw
========================================
========================================
/etc/ferm/rules.d/
========================================
https://docs.debops.org/en/latest/ansible/roles/ferm/rules.html
https://docs.debops.org/en/latest/ansible/roles/ferm/defaults/main.html
Default rules (ferm__default_rules)
  defaults/main.yml

Custom rules
  (ferm__rules, ferm__group_rules, ferm__host_rules or ferm__dependent_rules)

Each rule has to be defined as a YAML dict using some of the following keys:

domain
    Optional. iptables domain used for the firewall rule. Possible values: ip, ip6. Defaults to ferm__domains.
table
    Optional. iptables table to which the rule is added or from which it is removed. Defaults to filter.
chain
    Optional. iptables chain to which the rule is added or from which it is removed. Defaults to INPUT.
by_role
    Optional. Name of the Ansible role in the format ROLE_OWNER.ROLE_NAME which is responsible for the rule. This will be included as a comment in the generated rule file.
------------------
 iptables INPUT chain called debops-legacy-input-rules - ferm__include_legacy to False
------------------
ferm__mark_portscan: True
ferm__iptables_backend_type
ferm__ansible_controllers: [ '192.168.121.1' ]
ferm__ansible_controllers_ports: [ 'ssh' ]
ferm__default_policy_input: 'DROP'
ferm__default_policy_output: 'ACCEPT'
ferm__default_policy_forward: 'DROP'
ferm__filter_recent: True
ferm__filter_recent_name: 'badguys'
ferm__filter_recent_time: '{{ (60 * 60 * 2) }}'
ferm__fail2ban: True ???






